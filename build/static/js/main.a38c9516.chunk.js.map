{"version":3,"sources":["spotify.jsx","Login.jsx","SideBarOption.jsx","StateProvider.jsx","SideBar.jsx","Header.jsx","SongRow.jsx","Body.jsx","Footer.jsx","Player.jsx","App.js","serviceWorker.js","Reducer.js","index.js"],"names":["accessUrl","join","Login","alert","className","src","alt","href","SideBarOption","title","Icon","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","SideBar","playlist","HomeIcon","SearchIcon","LibraryMusicIcon","classname","items","map","name","key","id","Header","spotify","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","album","artists","artist","Body","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","console","log","description","context_uri","fontSize","tracks","Footer","token","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToPrevious","skipToNext","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","hash","window","location","substring","split","reduce","acc","parts","decodeURIComponent","_token","access_token","setAccessToken","getMyTopArtists","response","top_artists","getUserPlaylists","getPlaylist","getMe","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a38c9516.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:4000/\";\nconst clientId = \"d0efcc786e394bb4a29220ca5e8c0b88\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((acc, item) => {\n      let parts = item.split(\"=\");\n      acc[parts[0]] = decodeURIComponent(parts[1]);\n      return acc;\n    }, {});\n};\n\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport \"./login.css\";\nimport { accessUrl } from \"./spotify\";\n\nfunction Login() {\n  {\n    alert(\"Hi, thanks for login need premium accontto work this!!!\");\n  }\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"logo\"\n      />\n      <a href={accessUrl}>Login with spotify</a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./sidebaroption.css\";\n\nfunction SideBarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebaroption\">\n      {Icon && <Icon className=\"sidebaroption_icon\" />}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default SideBarOption;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from \"react\";\nimport \"./sidebar.css\";\nimport SideBarOption from \"./SideBarOption\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction SideBar() {\n  const [{ playlist }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar_logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <SideBarOption Icon={HomeIcon} title=\"Home\" />\n      <SideBarOption Icon={SearchIcon} title=\"Search\" />\n      <SideBarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\n      <br />\n      <strong classname=\"sidebarTitle\">PLAYLIST</strong>\n      <hr />\n      {playlist?.items?.map((playlist) => (\n        <SideBarOption title={playlist.name} key={playlist.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./header.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { Avatar } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect } from \"react\";\n\nfunction Header({ spotify }) {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header_left\">\n        <SearchIcon />\n        <input\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"header_right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./songrow.css\";\n\nfunction SongRow({ track, playSong }) {\n  return (\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React, { useEffect } from \"react\";\nimport \"./body.css\";\nimport Header from \"./Header\";\nimport { useStateValue } from \"./StateProvider\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({ spotify }) {\n  const [{ discover_weekly }, dispatch] = useStateValue();\n  const playPlaylist = (id) => {\n    spotify\n      .play({\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  const playSong = (id) => {\n    spotify\n      .play({\n        uris: [`spotify:track:${id}`],\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n        {\n          console.log(\"itemset\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      <div className=\"body_info\">\n        <img src={discover_weekly?.images[0].url} alt=\"dsf\" />\n        <div className=\"body_infoText\">\n          <strong>playlist</strong>\n          <h4>{discover_weekly?.name}</h4>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n      <div className=\"body_songs\">\n        <div className=\"body_icons\">\n          <PlayCircleFilledIcon\n            className=\"body_shuffle\"\n            onClick={playPlaylist}\n          />\n          <FavoriteIcon fontSize=\"large\" />\n          <MoreHorizIcon />\n        </div>\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow playSong={playSong} track={item.track} key={item.id} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\n\nimport \"./footer.css\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nfunction Footer({ spotify }) {\n  const [{ token, item, playing }, dispatch] = useStateValue();\n  useEffect(() => {\n    spotify.getMyCurrentPlaybackState().then((r) => {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: r.is_playing,\n      });\n\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n    });\n  }, [spotify, item]);\n  const handlePlayPause = () => {\n    if (playing) {\n      spotify.pause();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: false,\n      });\n    } else {\n      spotify.play();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    }\n  };\n  const skipNext = () => {\n    spotify.skipToNext();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n    spotify.skipToNext();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n      {\n        console.log(\"next\");\n      }\n    });\n  };\n\n  const skipPrevious = () => {\n    spotify.skipToPrevious();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n      {\n        console.log(\"previous\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer_left\">\n        <img\n          className=\"footer_album\"\n          src={item?.album.images[0].url}\n          alt={item?.name}\n        />\n        {item ? (\n          <div className=\"footer__songInfo\">\n            <h4>{item.name}</h4>\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n          </div>\n        ) : (\n          <div className=\"footer__songInfo\">\n            <h4>No song is playing</h4>\n            <p>...</p>\n          </div>\n        )}\n      </div>\n      <div className=\"footer_middle\">\n        <ShuffleIcon className=\"footer_green\" />\n        <SkipPreviousIcon className=\"footer_icon\" onClick={skipPrevious} />\n        {playing ? (\n          <PauseCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer_icon\"\n          />\n        ) : (\n          <PlayCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer_icon\"\n          />\n        )}\n        <SkipNextIcon className=\"footer_icon\" onClick={skipNext} />\n        <RepeatIcon className=\"footer_green\" />\n      </div>\n      <div className=\"footer_rigth\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider aria-labelledby=\"continuous-slider\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport SideBar from \"./SideBar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport \"./player.css\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player_body\">\n        <SideBar />\n        <Body spotify={spotify} />\n      </div>\n      <Footer spotify={spotify} />\n    </div>\n  );\n}\n\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify.jsx\";\nimport Login from \"./Login.jsx\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      spotify.getUserPlaylists().then((playlist) => {\n        dispatch({\n          type: \"SET_PLAYLIST\",\n          playlist: playlist,\n        });\n      });\n\n      spotify.getPlaylist(\"1NjO8gd4WFiaxzlelxfSAD\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n  playlist: [],\n  spotify: null,\n  discover_weekly: null,\n  top_artists: null,\n  playing: false,\n  item: null,\n  token: \"\",\n};\n\nconst reducer = (state, action) => {\n  // console.log(action);\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"SET_PLAYING\":\n      return {\n        ...state,\n        playing: action.playing,\n      };\n\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n    case \"SET_PLAYLIST\": {\n      return {\n        ...state,\n        playlist: action.playlist,\n      };\n    }\n    case \"SET_SPOTIFY\":\n      return {\n        ...state,\n        spotify: action.spotify,\n      };\n\n    case \"SET_TOP_ARTISTS\":\n      return {\n        ...state,\n        top_artists: action.top_artists,\n      };\n    case \"SET_DISCOVER_WEEKLY\": {\n      return {\n        ...state,\n        discover_weekly: action.discover_weekly,\n      };\n    }\n\n    case \"SET_ITEM\": {\n      return {\n        ...state,\n        item: action.item,\n      };\n    }\n\n    case \"SET_PLAYING\": {\n      return {\n        ...state,\n        playing: action.item,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StateProvider } from \"./StateProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./Reducer\";\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </StateProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}